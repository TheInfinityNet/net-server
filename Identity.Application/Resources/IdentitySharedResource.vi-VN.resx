<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Message.RefreshTokenSuccess" xml:space="preserve">
    <value>Token đã được làm mới</value>
  </data>
  <data name="Message.VerifyEmailSuccess" xml:space="preserve">
    <value>Email đã được xác minh, vui lòng đăng nhập</value>
  </data>
  <data name="Required.Email" xml:space="preserve">
    <value>Email là bắt buộc</value>
  </data>
  <data name="Required.Password" xml:space="preserve">
    <value>Mật khẩu là bắt buộc</value>
  </data>
  <data name="StringLength.Password" xml:space="preserve">
    <value>Mật khẩu phải có ít nhất 6 ký tự và tối đa 20 ký tự</value>
  </data>
  <data name="Required.FirstName" xml:space="preserve">
    <value>Tên là bắt buộc</value>
  </data>
  <data name="StringLength.FirstName" xml:space="preserve">
    <value>Tên phải có ít nhất 2 ký tự và tối đa 50 ký tự</value>
  </data>
  <data name="Required.LastName" xml:space="preserve">
    <value>Họ là bắt buộc</value>
  </data>
  <data name="StringLength.LastName" xml:space="preserve">
    <value>Họ phải có ít nhất 2 ký tự và tối đa 50 ký tự</value>
  </data>
  <data name="Required.Token" xml:space="preserve">
    <value>Token là bắt buộc</value>
  </data>
  <data name="Message.SignUpSuccess" xml:space="preserve">
    <value>Đăng ký người dùng thành công, vui lòng xác minh email của bạn</value>
  </data>
  <data name="Message.SendForgotEmailSuccess" xml:space="preserve">
    <value>Email quên mật khẩu đã được gửi, vui lòng kiểm tra hộp thư đến của bạn</value>
  </data>
  <data name="Message.VerifyForgotCodeSuccess" xml:space="preserve">
    <value>Email đã được xác minh, vui lòng đăng nhập</value>
  </data>
  <data name="Message.ResetPasswordSuccess" xml:space="preserve">
    <value>Đặt lại mật khẩu thành công</value>
  </data>
  <data name="Message.SendVerificationEmailSuccess" xml:space="preserve">
    <value>Email xác minh đã được gửi, vui lòng kiểm tra hộp thư đến của bạn</value>
  </data>
  <data name="ValidationError.InvalidEmail" xml:space="preserve">
    <value>Địa chỉ email không hợp lệ</value>
  </data>
  <data name="ValidationError.WeakPassword" xml:space="preserve">
    <value>Mật khẩu quá yếu</value>
  </data>
  <data name="ValidationError.PasswordMismatch" xml:space="preserve">
    <value>Mật khẩu không khớp</value>
  </data>
  <data name="ValidationError.TermsNotAccepted" xml:space="preserve">
    <value>Bạn phải chấp nhận các điều khoản và điều kiện</value>
  </data>
  <data name="Unauthorized.WrongPassword" xml:space="preserve">
    <value>Mật khẩu không chính xác</value>
  </data>
  <data name="Unauthorized.TwoFactorRequired" xml:space="preserve">
    <value>Yêu cầu xác thực hai yếu tố</value>
  </data>
  <data name="Unauthorized.TokenExpired" xml:space="preserve">
    <value>Refresh token đã hết hạn</value>
  </data>
  <data name="Unauthorized.InvalidToken" xml:space="preserve">
    <value>Refresh token không hợp lệ</value>
  </data>
  <data name="Unauthorized.TokenRevoked" xml:space="preserve">
    <value>Refresh token đã bị thu hồi</value>
  </data>
  <data name="Unauthorized.TokenBlacklisted" xml:space="preserve">
    <value>Refresh token đã bị đưa vào danh sách đen</value>
  </data>
  <data name="ValidationError.CodeInvalid" xml:space="preserve">
    <value>Mã xác minh không hợp lệ</value>
  </data>
  <data name="ValidationError.EmailAlreadyInUse" xml:space="preserve">
    <value>Email đã được sử dụng</value>
  </data>
  <data name="UnExpected.CannotSendEmail" xml:space="preserve">
    <value>Không thể gửi email</value>
  </data>
  <data name="ValidationError.UsernameAlreadyInUse" xml:space="preserve">
    <value>Tên người dùng đã được sử dụng</value>
  </data>
  <data name="Phone.MobileNumber" xml:space="preserve">
    <value>Số điện thoại không hợp lệ</value>
  </data>
  <data name="Required.MobileNumber" xml:space="preserve">
    <value>Số điện thoại là bắt buộc</value>
  </data>
  <data name="Required.Code" xml:space="preserve">
    <value>Mã là bắt buộc</value>
  </data>
  <data name="StringLength.Code" xml:space="preserve">
    <value>Mã phải có 6 ký tự</value>
  </data>
  <data name="Required.PasswordConfirmation" xml:space="preserve">
    <value>Nhập lại mật khẩu là bắt buộc</value>
  </data>
  <data name="EmailAddress.Email" xml:space="preserve">
    <value>Địa chỉ email không hợp lệ</value>
  </data>
  <data name="EnumDataType.Gender" xml:space="preserve">
    <value>Giới tính không hợp lệ</value>
  </data>
</root>