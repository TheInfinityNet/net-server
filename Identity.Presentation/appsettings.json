{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.AspNetCore.Mvc": "Warning",
      "Microsoft.Hosting.Lifetime": "Information",
      "Microsoft.AspNetCore.Diagnostics.HealthChecks": "Warning",
      "Microsoft.EntityFrameworkCore": "Warning",
      "IdentityService": "Information"
    },
    "Filters": {
      "Microsoft.AspNetCore.Diagnostics.HealthChecks": "Warning"
    }
  },

  "AllowedHosts": "*",

  "Cors": {
    "AllowOrigins": [
      "https://localhost:9999"
    ]
  },

  "Server": {
    "BasePath": "/identity"
  },

  "GrpcServers": {
    "Profile-Service": "https://localhost:8283"
  },

  "Jwt": {
    "AccessKey": "",
    "RefreshKey": "",
    "Issuer": "org.infinity.net",
    "Audiences": [
      "webapp.com",
      "mobileapp"
    ],
    "ValidDuration": "1800",
    "RefreshDuration": "2592000"
  },

  "Swagger": {
    "Title": "Identity Service REST APIs",
    "ApiDocs": "identity-service-rest-api-service-dev",
    "Version": "v1",
    "Description": "This is the APIs documentation for Identity Service.",
    "ServerUrl": "https://localhost:8282/identity",
    "ServerDescription": "Identity Service API service For Development",
    "ContactName": "Infinity Net Organization",
    "ContactEmail": "tech.infinitynet.org@gmail.com"
  },

  "Redis": {
    "Connection": "localhost:6379"
  },

  "ConnectionStrings": {
    "DefaultConnection": "Host=localhost;Port=5432;Database=identity_service_db;Username=infinitynetUser;Password=Password@123"
  },

  "RabbitMQ": {
    "Host": "localhost",
    "ExchangeName": "identity-service-exchange",
    "UserName": "infinitynetUser",
    "Password": "Password@123"
  },

  "GrafanaStack": {
    "ServiceName": "IdentityService"
  },

  "Metric": {
    "StandAloneKestrelServerEnabled": false,
    "Port": 8282,
    "Url": "/metrics",
    "Hostname": "+",
    "HttpMetricsEnabled": true,
    "SuppressDefaultMetrics": false
  },

  "HealthChecksUI": {
    "HealthChecks": [
      {
        "Name": "HTTP-Api-Basic",
        "Uri": "https://localhost:8282/healthz"
      }
    ],
    "EvaluationTimeOnSeconds": 10,
    "MinimumSecondsBetweenFailureNotifications": 60
  },

  "Serilog": {
    "Using": [
      "Serilog.Exceptions",
      "Serilog.Sinks.Console"
    ],
    "Enrich": [
      "WithExceptionDetails"
    ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Error",
        "Microsoft.Hosting.Lifetime": "Error",
        "Microsoft.AspNetCore": "Warning",
        "System": "Information"
      }
    },
    "Filter": [
      {
        "Name": "ByExcluding",
        "Args": { "expression": "@mt = 'An unhandled exception has occurred while executing the request.'" }
      }
    ],
    "WriteTo": [
      {
        "Name": "Console"
      } /*,
      {
        "Name": "File",
        "Args": {
          "path": "./bin/logs/Logs.txt",
          "rollingInterval": "Day"
        }
      },
      {
        "Name": "GrafanaLoki",
        "Args": { "uri": "http://localhost:3100" }
      }*/
    ]
  }

}
