syntax = "proto3";

package InfinityNetServer.BuildingBlocks.Application.Protos;

option csharp_namespace = "InfinityNetServer.BuildingBlocks.Application.Protos";

import "google/protobuf/empty.proto";

import "Protos/base.proto";

import "google/protobuf/timestamp.proto";

message PreviewCommentRequest {
	string id = 1;
}

// giờ định nghĩa cái input với out put cho hàm grpc
// request: truyền vào post id đế biết đếm comment
message CommentCountRequest {
	string postId = 1;
}

message CommentPreviewRequest {
	string postId = 1;
}

message CommentIdsResponse {
  repeated string ids = 1;
}

message PreviewCommentResponse {

	string commentId = 1;

	string profileId = 2;

	string postId = 3;

	string previewContent = 4;

	string fileMetadataId = 5;

}

message CommentCountResponse {
	int32 count = 1;
}

message CommentPreviewResponse {
    string commentId = 1;
    string profileId = 2;
    ContentResponse content = 3;
    int32 replyCount = 4;
    google.protobuf.Timestamp createAt = 5;
}

message ContentResponse {
    string text = 1;
    repeated TagFacetResponse tagFacets = 2;
}

message TagFacetResponse {
    string type = 1;
    int32 start = 2;
    int32 end = 3;
    string profileId = 4;
}


service CommentService {

	rpc getCommentIds (google.protobuf.Empty) returns (CommentIdsResponse) {}

	rpc getPreviewFileMetadatas (google.protobuf.Empty) returns (PreviewFileMetadatasResponse) {}

	rpc getPreviewComment (PreviewCommentRequest) returns (PreviewCommentResponse) {}

	// định nghĩa hàm
	rpc getCommentCount (CommentCountRequest) returns (CommentCountResponse) {}
	rpc getCommentPreview (CommentPreviewRequest) returns (CommentPreviewResponse) {}


	// ĐỊnh nghĩa xong thì rebuild lại cho chắc
	// giờ viết implement cho cái hàm grpc ở phía server nha
}
